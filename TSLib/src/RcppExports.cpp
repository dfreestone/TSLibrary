// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// mpcflushesc
NumericVector mpcflushesc(NumericVector data, int nevents);
RcppExport SEXP TSLib_mpcflushesc(SEXP dataSEXP, SEXP neventsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type data(dataSEXP);
    Rcpp::traits::input_parameter< int >::type nevents(neventsSEXP);
    rcpp_result_gen = Rcpp::wrap(mpcflushesc(data, nevents));
    return rcpp_result_gen;
END_RCPP
}
// mpc2tecc
NumericMatrix mpc2tecc(NumericVector mpc, int nevents, double resolution);
RcppExport SEXP TSLib_mpc2tecc(SEXP mpcSEXP, SEXP neventsSEXP, SEXP resolutionSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type mpc(mpcSEXP);
    Rcpp::traits::input_parameter< int >::type nevents(neventsSEXP);
    Rcpp::traits::input_parameter< double >::type resolution(resolutionSEXP);
    rcpp_result_gen = Rcpp::wrap(mpc2tecc(mpc, nevents, resolution));
    return rcpp_result_gen;
END_RCPP
}
// rasterc
NumericVector rasterc(NumericVector events, NumericVector pattern, int event_count);
RcppExport SEXP TSLib_rasterc(SEXP eventsSEXP, SEXP patternSEXP, SEXP event_countSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type events(eventsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type pattern(patternSEXP);
    Rcpp::traits::input_parameter< int >::type event_count(event_countSEXP);
    rcpp_result_gen = Rcpp::wrap(rasterc(events, pattern, event_count));
    return rcpp_result_gen;
END_RCPP
}
// trialdefc
NumericVector trialdefc(NumericVector events, NumericVector pattern, int event_count, int pattern_count);
RcppExport SEXP TSLib_trialdefc(SEXP eventsSEXP, SEXP patternSEXP, SEXP event_countSEXP, SEXP pattern_countSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type events(eventsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type pattern(patternSEXP);
    Rcpp::traits::input_parameter< int >::type event_count(event_countSEXP);
    Rcpp::traits::input_parameter< int >::type pattern_count(pattern_countSEXP);
    rcpp_result_gen = Rcpp::wrap(trialdefc(events, pattern, event_count, pattern_count));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"TSLib_mpcflushesc", (DL_FUNC) &TSLib_mpcflushesc, 2},
    {"TSLib_mpc2tecc", (DL_FUNC) &TSLib_mpc2tecc, 3},
    {"TSLib_rasterc", (DL_FUNC) &TSLib_rasterc, 3},
    {"TSLib_trialdefc", (DL_FUNC) &TSLib_trialdefc, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_TSLib(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
